FROM node:18-alpine AS builder

# Install dependencies
WORKDIR /app

# Copy just the package files first to leverage Docker cache
COPY package*.json ./

# Install dependencies with force flag to handle peer dependency issues
RUN npm install --legacy-peer-deps

# Copy dashboard source code
COPY src/api/ ./src/api/
COPY src/monitoring/ ./src/monitoring/
COPY src/utils/ ./src/utils/

# Build the React app with legacy peer deps flag
RUN npm run build

# Production image
FROM nginx:alpine

# Copy built files from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# Add runtime environment variable support
RUN apk add --no-cache bash
COPY docker/entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint.sh

# Expose port
EXPOSE 80

# Healthcheck
HEALTHCHECK --interval=30s --timeout=5s CMD wget -qO- http://localhost/health || exit 1

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Set default command
CMD ["nginx", "-g", "daemon off;"]